#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

source=$1

if [ -z "$source" ]; then
  echo "usage: $0 <path/to/source>"
  exit 1
fi

# for jq
PATH=/usr/local/bin:$PATH

payload=$(mktemp $TMPDIR/git-resource-request.XXXXXX)

cat > $payload <&0

load_pubkey $payload
configure_https_tunnel $payload
configure_git_ssl_verification $payload
configure_credentials $payload

uri=$(jq -r '.source.uri // ""' < $payload)
branch=$(jq -r '.source.branch // ""' < $payload)
git_config_payload=$(jq -r '.source.git_config // []' < $payload)
build_state=$(jq -r '.params.state // ""' < $payload)
build_commit=$(jq -r '.params.commit // ""' < $payload)
bitbucket_key=$(jq -r '.source.bitbucket_key // ""' < $payload)
bitbucket_secret=$(jq -r '.source.bitbucket_secret // ""' < $payload)

#Update Bitbucket

#Get access token

ACCES_TOKEN=curl -X POST -u "${bitbucket_key}:${bitbucket_secret}" https://bitbucket.org/site/oauth2/access_token \
-d grant_type=client_credentials | jq '.access_token'

#Post status to bitbucket including state, build key and url of the building pipeline

BUILD_URL="${concourse_url}/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"

update_state=""

if $build_state == "success"; then
    update_state="SUCCESSFUL"
elif $build_state == "failed"; then
    update_state="FAILED"
elif $build_state == "inprogress"; then
    update_state="INPROGRESS"
else
  echo "No status set" >&2
  cat $payload >&2
  exit 1
fi

BUILD_STATUS='{"state":"${update_state}","key":"concourse-${BUILD_JOB_NAME}", "url":"${BUILD_URL}"}'

curl -X POST https://bitbucket.org/2.0/repositories/persgroep/test-pipeline/commit/$(ref)/statuses/build \
--header "Content-Type: application/json" \
--header "Authorization: Bearer ${ACCESS_TOKEN}"
--data $(BUILD_STATUS)


jq -n "{
  version: {ref: $(git rev-parse HEAD | jq -R .)},
  metadata: $(git_metadata)
}" >&3
